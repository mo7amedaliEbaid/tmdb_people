// Mocks generated by Mockito 5.4.5 from annotations
// in tmdb/test/presentation/blocs/popular_people_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tmdb/data/models/person_model.dart' as _i5;
import 'package:tmdb/data/repositories/person_repository.dart' as _i2;
import 'package:tmdb/domain/use_cases/get_cached_popular_people.dart' as _i6;
import 'package:tmdb/domain/use_cases/get_popular_people.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePersonRepository_0 extends _i1.SmartFake
    implements _i2.PersonRepository {
  _FakePersonRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPopularPeople].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularPeople extends _i1.Mock implements _i3.GetPopularPeople {
  MockGetPopularPeople() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PersonRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePersonRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PersonRepository);

  @override
  _i4.Future<List<_i5.PersonModel>> call({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#page: page},
        ),
        returnValue:
            _i4.Future<List<_i5.PersonModel>>.value(<_i5.PersonModel>[]),
      ) as _i4.Future<List<_i5.PersonModel>>);
}

/// A class which mocks [GetCachedPopularPeople].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCachedPopularPeople extends _i1.Mock
    implements _i6.GetCachedPopularPeople {
  MockGetCachedPopularPeople() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PersonRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePersonRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PersonRepository);

  @override
  _i4.Future<List<_i5.PersonModel>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.PersonModel>>.value(<_i5.PersonModel>[]),
      ) as _i4.Future<List<_i5.PersonModel>>);
}
